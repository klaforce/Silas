<script src="http://code.jquery.com/jquery-1.8.2.min.js" type="text/javascript"></script>
<script src="Scripts/jquery.signalR-1.0.1.min.js" type="text/javascript"></script>
<script src="Scripts/d3.v3.min.js" type="text/javascript"></script>
<script src="signalr/hubs" type="text/javascript"></script>

<style>
    svg {
        font: 10px sans-serif;
    }
 
    .line {
        fill: none;
        stroke: #000;
        stroke-width: 1.5px;
    }
 
    .axis path, .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }
 
</style>

<script type="text/javascript">
    $(function() {

        //setup the d3 charting
        var n = 40,
            data = [];

        var margin = { top: 10, right: 10, bottom: 20, left: 40 },
            width = 960 - margin.left - margin.right,
            height = 500 - margin.top - margin.bottom;

        var x = d3.scale.linear()
            .domain([0, n - 1])
            .range([0, width]);

        var y = d3.scale.linear()
            .domain([2000, 9000])
            .range([height, 0]);

        var line = d3.svg.line()
            .x(function(d, i) { return x(i); })
            .y(function(d, i) { return y(d); });

        var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        svg.append("defs").append("clipPath")
            .attr("id", "clip")
            .append("rect")
            .attr("width", width)
            .attr("height", height);

        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.svg.axis().scale(x).orient("bottom"));

        svg.append("g")
            .attr("class", "y axis")
            .call(d3.svg.axis().scale(y).orient("left"));

        var path = svg.append("g")
            .attr("clip-path", "url(#clip)")
            .append("path")
            .data([data])
            .attr("class", "line")
            .attr("d", line);

        // Proxy created on the fly          
        var forecastHub = $.connection.forecastHub;

        var init = function() {
        };

        // Add a client-side hub method that the server will call
        forecastHub.client.updateNaieve = function(entry) {
            // push a new data point onto the back
            console.log(entry);
            data.push(entry);

            // redraw the line, and slide it to the left
            path
                .attr("d", line)
                .attr("transform", null)
                .transition()
                .duration(500)
                .ease("linear");
            
            if(data.length > n)
                path.attr("transform", "translate(" + x(-1) + ")");

            // pop the old data point off the front
            //if we are past our number of data points
            if(data.length > n)
                data.shift();
        };

        // Start the connection
        $.connection.hub.start().done(init);
    });
</script>

<body>
  
<div>
    <ul id="messages">
    </ul>
</div>
